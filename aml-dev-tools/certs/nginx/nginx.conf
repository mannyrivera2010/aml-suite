#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    gzip  on;

    server {
        listen       8085; # http2 default_server;
        server_name  localhost;
        server_tokens off;

        location ^~ /certs {
          alias /home/mrivera/certs/;
          autoindex on;
        }

    }
    # HTTPS server
    # https://geekflare.com/nginx-webserver-security-hardening-guide/
    # https://www.ghacks.net/2016/04/18/manage-cipher-suites-firefox/
    server {
        listen       4443 ssl; # http2 default_server;
        server_name  localhost;
        server_tokens off;

        ssl_certificate      /home/mrivera/certs/server_nopass.crt;
        ssl_certificate_key  /home/mrivera/certs/server_nopass.key;

        ssl_session_cache shared:SSL:10m;
        ssl_verify_depth 2;
        ssl_session_timeout  5m;

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

        ssl_ciphers "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA HIGH !RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS";
        # openssl ciphers -V 'HIGH:!aNULL:!MD5'
        # https://www.openssl.org/docs/manmaster/man1/ciphers.html

        ssl_prefer_server_ciphers  on;
        # openssl dhparam -out dhparams.pem 2048
        ssl_dhparam /home/mrivera/certs/dhparams.pem;
        ssl_client_certificate /home/mrivera/certs/ca_root.pem;
        ssl_verify_client optional;

        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-XSS-Protection "1; mode=block";

        # Location
        location = /favicon.ico { access_log off; log_not_found off; }

        # enforce trailing slash on urls
        location ~ ^/(?<page>static|center|hud|webtop|help|iwc|demo_apps|ws|frontend)$ {
          return 301 $scheme://$http_host/$page/;
        }

        # AML 2.0 Frontend
        location /center {
          proxy_pass http://localhost:8000/dist/;
        }

        # AML 3.0 Frontend
        location ^~/frontend {
          proxy_pass http://172.16.98.81:8080/;
        }

        # AML 2.0/3.0 Backend
        location / {
            # enabling this broke production for Swagger and any requests
            # with responses larger than ~48k
            proxy_buffering off;
            proxy_pass https://localhost:8001/;

            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Scheme $scheme;

            # SSL settings for django-ssl-client-auth
            # {% if pki_login %}
            proxy_set_header X-SSL-User-DN $ssl_client_s_dn;
            proxy_set_header X-SSL-Issuer-DN $ssl_client_i_dn;
            proxy_set_header X-SSL-Authenticated $ssl_client_verify;
            # {% endif %}

            #if ($ssl_client_verify != "SUCCESS") {
            #  add_header X-SSL-VERIFY $ssl_client_verify;
            #}
        }

        location ^~ /ws/ {
            # enabling this broke production for Swagger and any requests
            # with responses larger than ~48k
            proxy_buffering off;
            proxy_pass http://localhost:4200/;

            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Scheme $scheme;

            # SSL settings for django-ssl-client-auth
            # {% if pki_login %}
            proxy_set_header X-SSL-User-DN $ssl_client_s_dn;
            proxy_set_header X-SSL-Issuer-DN $ssl_client_i_dn;
            proxy_set_header X-SSL-Authenticated $ssl_client_verify;
            # {% endif %}

            #if ($ssl_client_verify != "SUCCESS") {
            #  add_header X-SSL-VERIFY $ssl_client_verify;
            #}

            # proxy_pass http://localhost:4200/socket.io;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root html;
        }
    }
}
