# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "bento/centos-6.7"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080
  #config.vm.network "forwarded_port", guest: 443, host: 4433

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  #config.vm.network "private_network", type: "dhcp"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  #config.vm.synced_folder "/Users/Alan/ozp/ozp-center/dist/assets", "/usr/local/ozp/frontend/center/assets", owner: "nginx"
  #config.vm.synced_folder "/Users/Alan/ozp-v3/ozpv3/ozpcenter", "/usr/local/ozp/backend/ozpcenter", owner: "ozp"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  #config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #  vb.memory = "2048"
  #end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   sudo apt-get update
  #   sudo apt-get install -y apache2
  # SHELL
  #
  #config.vm.provision "ansible_local" do |ansible|
  #  ansible.playbook = "/vagrant/staging_site.yml"
  #end
  #
  #
  #
  # Create multiple VMs to mimic production environment
  config.vm.define "image_server" do |is|
    is.vm.hostname = "image-server"
    is.vm.network "private_network", ip: "172.28.128.25"
    is.vm.provider "virtualbox" do |vb|
      vb.memory = "512"
      vb.name = "image_server"
    end
  end
  config.vm.define "db_server" do |db|
    db.vm.hostname = "db-server"
    db.vm.network "private_network", ip: "172.28.128.26"
    db.vm.provider "virtualbox" do |vb|
      vb.memory = "1024"
      vb.name = "db_server"
    end
  end
  config.vm.define "loadbalancer" do |lb|
    lb.vm.network "forwarded_port", guest: 443, host: 4433
    lb.vm.network "forwarded_port", guest: 1936, host: 1936
    lb.vm.hostname = "loadbalancer"
    lb.vm.network "private_network", ip: "172.28.128.20"
    lb.vm.provider "virtualbox" do |vb|
      vb.memory = "512"
      vb.name = "loadbalancer"
    end
  end
  config.vm.define "auth_server" do |as|
    as.vm.hostname = "auth-server"
    as.vm.network "private_network", ip: "172.28.128.27"
    as.vm.provider "virtualbox" do |vb|
      vb.memory = "512"
      vb.name = "auth_server"
    end
  end
  config.vm.define "frontend_alpha" do |fa|
    fa.vm.hostname = "frontend-alpha"
    fa.vm.network "private_network", ip: "172.28.128.21"
    fa.vm.provider "virtualbox" do |vb|
      vb.memory = "512"
      vb.name = "frontend_alpha"
    end
  end
  config.vm.define "backend_alpha" do |ba|
    ba.vm.hostname = "backend-alpha"
    ba.vm.network "private_network", ip: "172.28.128.22"
    ba.vm.provider "virtualbox" do |vb|
      vb.memory = "512"
      vb.name = "backend_alpha"
    end
  end
  config.vm.define "frontend_bravo" do |fb|
    fb.vm.hostname = "frontend-bravo"
    fb.vm.network "private_network", ip: "172.28.128.23"
    fb.vm.provider "virtualbox" do |vb|
      vb.memory = "512"
      vb.name = "frontend_bravo"
    end
  end
  config.vm.define "backend_bravo" do |bb|
    bb.vm.hostname = "backend-bravo"
    bb.vm.network "private_network", ip: "172.28.128.24"
    bb.vm.provider "virtualbox" do |vb|
      vb.memory = "512"
      vb.name = "backend_bravo"
    end
  end
end
